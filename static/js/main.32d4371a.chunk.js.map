{"version":3,"sources":["components/LandingPage.js","components/Accordion/accordion.js","components/dialogForm.js","components/CreateTimeline.js","components/timeline/entryContainer.js","components/timeline/timelineTitle.js","components/timeline/entry.js","components/timeline/divider.js","components/timeline/timeline.js","components/shareDialog.js","components/previewPage.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","className","name","content","style","position","top","to","Panel","props","state","height","myRef","React","createRef","forceUpdateHandler","bind","window","setTimeout","ReactDOM","findDOMNode","querySelector","scrollHeight","setState","prevProps","activeTab","this","index","inputElement","click","forceUpdate","label","id","activateTab","isActive","contentHeight","current","innerStyle","role","aria-expanded","onClick","aria-hidden","ref","cloneElement","children","update","form","type","nextTab","cursor","outline","display","input","Component","Accordion","prev","panels","map","panel","component","returnErrorMsg","msg","color","fontSize","marginLeft","textAlign","getInitialTouched","initialValues","entry","date","description","from","entrySchema","Yup","shape","max","required","when","is","val","undefined","then","typeError","otherwise","notRequired","schema","test","message","DialogForm","onSubmit","isOpen","setIsOpen","formRef","deleteEntry","enableReinitialize","innerRef","initialTouched","validateOnMount","validationSchema","formik","Dialog","onClose","open","maxWidth","fullWidth","DialogContent","marginTop","placeholder","classnames","variant","render","width","inputVariant","justifyContent","margin","multiline","rows","rowsMax","Button","textTransform","DialogActions","handleSubmit","_","isEmpty","errors","LOCAL_STORAGE_KEY","TextInput","useField","field","TextField","DateInput","mobile","useMediaQuery","helpers","clearable","disableToolbar","autoOk","disableFuture","openTo","InputProps","disableUnderline","format","onChange","setValue","views","CreateTimeline","history","useHistory","useState","events","questionTwo","setQuestionTwo","phases","questionThree","setQuestionThree","Q1","location","Q2","Q3","Q4","entries","Q5","title","Q6","answers","setAnswers","setErrors","isNewEntryFormOpen","setIsNewEntryFormOpen","useEffect","event","push","phase","sort","entryA","entryB","dateA","dateB","sortEntries","setQ4","storageAnswers","JSON","parse","localStorage","getItem","firstUpdate","useRef","setItem","stringify","values","value","apiKey","selectProps","setFieldValue","onBlur","handleBlur","arrayHelpers","tabIndex","remove","lastdate","FormikTextFieldQuestion","questionNumber","questionName","selectedEntry","setSelectedEntry","setSelectedEntryIndex","newEntryFormRef","anchorEl","setAnchorEl","handleClose","formatDate","dateString","Date","month","getMonth","day","getDate","getFullYear","gridColumnStart","gridColumnEnd","IconButton","float","newEvents","eventIndex","indexOf","splice","newPhases","phaseIndex","e","currentTarget","Menu","keepMounted","Boolean","MenuItem","unshift","ensure","of","min","validate","abortEarly","valid","console","log","catch","err","error","EntryContainer","TimelineTitle","animateIn","duration","animateOnce","offset","delay","wordSpacing","Entry","Divider","Timeline","scrollTarget","setScrollTarget","supportsPassive","addEventListener","Object","defineProperty","get","wheelOpt","passive","document","handleKeyDown","handleScroll","preventDefault","removeEventListener","dividerHeight","scrollToTarget","targetID","scroller","scrollTo","String","smooth","key","length","wheelDelta","handlers","useSwipeable","onSwipedUp","eventData","onSwipedDown","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","useDoubleTap","clientY","innerWidth","ShareDialog","shareURL","aria-label","padding","FacebookShareButton","url","FacebookIcon","size","round","Tooltip","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","FormControl","OutlinedInput","borderRadius","defaultValue","readOnly","endAdornment","InputAdornment","edge","PreviewPage","localStorageAnswers","organizeAnswers","toReturn","marginRight","zIndex","App","THEME","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","ThemeProvider","theme","utils","DateFnsUtils","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32d4371a.chunk.js","sourcesContent":["import React from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { NavLink } from \"react-router-dom\";\n\nconst LandingPage = () => {\n  return (\n    <div className=\"landing-page\">\n      <MetaTags>\n        <title>My Year in Quarantine - Home</title>\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\n      </MetaTags>\n      {/* intro block */}\n      <div className=\"intro-block\">\n        <h1>\n          my <br />{\" \"}\n          <span style={{ position: \"relative\", top: \"-5px\" }}>year</span> <br />\n          <span style={{ position: \"relative\", top: \"4px\" }}>in</span> <br />\n          <span style={{ position: \"relative\", top: \"-5px\" }}>quarantine</span>\n        </h1>\n        <p>\n          My Year in Quarantine is a project aiming to document the pandemic\n          journeys of people all over the world using beautiful interactive\n          timelines. Timelines take only minutes to create and can be shared\n          anywhere across the Internet.\n          <br />\n          <br />\n          Everyone has a story worth telling. Share yours today.\n        </p>\n        <div>\n          <NavLink className=\"getStarted\" to={\"/create\"}>\n            Get started\n          </NavLink>\n          <NavLink className=\"learnMore\" to={\"/create\"}>\n            Learn more\n          </NavLink>\n        </div>\n        <span className=\"circle\" />\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./accordion.css\";\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      height: 0,\n    };\n\n    this.myRef = React.createRef();\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      const el = ReactDOM.findDOMNode(this); // findDOMNode is deprecated, replace with refs later\n      const height = el.querySelector(\".panel__inner\").scrollHeight;\n      this.setState({\n        height,\n      });\n    }, 333);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.activeTab === this.props.index &&\n      this.props.activeTab !== this.props.index\n    ) {\n      this.inputElement.click();\n    }\n  }\n\n  forceUpdateHandler() {\n    setTimeout(() => {\n      this.forceUpdate();\n    }, 20);\n  }\n\n  // make component re-render if number of elements has chagned\n  // turn code fragements into components which receive render props?\n\n  render() {\n    const { label, id, activeTab, index, activateTab } = this.props;\n    const { height } = this.state;\n    const isActive = activeTab === index;\n    const contentHeight = this.myRef.current\n      ? this.myRef.current.scrollHeight\n      : null;\n\n    const innerStyle = isActive\n      ? contentHeight\n        ? { height: contentHeight }\n        : { height: height }\n      : { height: \"0px\" };\n\n    return (\n      // eslint-disable-next-line\n      <div className=\"panel\" role=\"tabpanel\" aria-expanded={isActive}>\n        <button className=\"panel__label\" role=\"tab\" onClick={activateTab}>\n          {label}\n        </button>\n        <div\n          className=\"panel__inner\"\n          style={innerStyle}\n          aria-hidden={!isActive}\n        >\n          <div className=\"panel__content\" ref={this.myRef}>\n            {React.cloneElement(this.props.children, {\n              update: this.forceUpdateHandler,\n            })}\n            <div className=\"nextContainer\">\n              <button\n                form={id ? id : \"\"}\n                type=\"submit\"\n                className=\"next\"\n                onClick={() => {\n                  this.props.nextTab();\n                }}\n              >\n                <span style={{ cursor: \"pointer\", outline: \"none\" }}>Next</span>\n              </button>\n              <button\n                form={id ? id : \"\"}\n                type=\"submit\"\n                style={{ display: \"none\" }}\n                ref={(input) => (this.inputElement = input)}\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Accordion extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n    };\n\n    this.activateTab = this.activateTab.bind(this);\n    this.nextTab = this.nextTab.bind(this);\n  }\n\n  activateTab(index) {\n    this.setState((prev) => ({\n      activeTab: prev.activeTab === index ? -1 : index,\n    }));\n  }\n  nextTab() {\n    this.activateTab(this.state.activeTab + 1);\n  }\n\n  render() {\n    const { panels } = this.props;\n    const { activeTab } = this.state;\n    return (\n      <div className=\"accordion\" role=\"tablist\">\n        {panels.map((panel, index) => (\n          <Panel\n            key={index}\n            activeTab={activeTab}\n            index={index}\n            {...panel}\n            activateTab={this.activateTab.bind(null, index)}\n            nextTab={this.nextTab}\n          >\n            {panel.component}\n          </Panel>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Accordion;\n","import React from \"react\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport { TextInput, DateInput } from \"./CreateTimeline\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\n\nconst returnErrorMsg = (msg) => {\n  return (\n    <div\n      style={{\n        color: \"red\",\n        fontSize: \"0.8em\",\n        marginLeft: \"5px\",\n        textAlign: \"right\",\n      }}\n    >\n      {msg}\n    </div>\n  );\n};\n\nconst getInitialTouched = (initialValues) => {\n  if (initialValues.entry === \"\") return {};\n  else\n    return {\n      entry: true,\n      date: true,\n      description: true,\n      from: true,\n      to: true,\n    };\n};\n\nconst entrySchema = Yup.object().shape(\n  {\n    entry: Yup.string().max(100, \"max 100 characters\").required(\"required\"),\n    date: Yup.date().when(\"from\", {\n      // date is required when from is undefined (i.e. for events)\n      is: (val) => val === undefined,\n      then: Yup.date().typeError(\"q4: date is required\").required(\"required\"),\n      otherwise: Yup.date().notRequired(),\n    }),\n    from: Yup.date().when(\"date\", {\n      // required when date is undefined (i.e. for phases)\n      is: (val) => val === undefined,\n      then: Yup.date().typeError(\"q4: date is required\").required(\"required\"),\n      otherwise: Yup.date().notRequired(),\n    }),\n    to: Yup.date()\n      .when(\"date\", {\n        // required when date is undefined (i.e. for phases)\n        is: (val) => val === undefined,\n        then: Yup.date().typeError(\"q4: date is required\").required(\"required\"),\n        otherwise: Yup.date().notRequired(),\n      })\n      .when(\"from\", (from, schema) => {\n        return schema.test({\n          test: (to) => !to || !from || to > from,\n          message: \"end date should be after start date\",\n        });\n      }),\n  },\n  [\n    [\"date\", \"from\"],\n    [\"date\", \"to\"],\n    [\"to\", \"from\"],\n  ]\n);\n\nconst DialogForm = ({\n  initialValues,\n  onSubmit,\n  isOpen,\n  setIsOpen,\n  formRef,\n  deleteEntry,\n}) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      enableReinitialize\n      onSubmit={onSubmit}\n      innerRef={formRef}\n      initialTouched={getInitialTouched(initialValues)}\n      validateOnMount\n      validationSchema={entrySchema}\n    >\n      {(formik) => (\n        <Form>\n          <Dialog\n            onClose={() => {\n              setIsOpen(false);\n            }}\n            open={isOpen}\n            maxWidth={\"sm\"}\n            fullWidth={true}\n          >\n            <div>\n              <DialogContent className=\"dialog-content\">\n                <div className=\"dialog-content\">\n                  <div\n                    style={{\n                      color: \"gray\",\n                      fontSize: \"0.8em\",\n                      marginLeft: \"5px\",\n                    }}\n                  >\n                    *required\n                  </div>\n                  <TextInput\n                    style={{ marginTop: \"15px\" }}\n                    name={\"entry\"}\n                    placeholder={\"\"}\n                    classnames={\"text-input text-input-wide\"}\n                    fullWidth={true}\n                    required={true}\n                    variant=\"outlined\"\n                    label=\"event/phase\"\n                  />\n\n                  <ErrorMessage name=\"entry\" render={returnErrorMsg} />\n                  {initialValues.date !== undefined ? (\n                    <div>\n                      <DateInput\n                        style={{ width: \"100%\", marginTop: \"20px\" }}\n                        name={\"date\"}\n                        classnames={\"date-input date-input-wide\"}\n                        required={true}\n                        inputVariant=\"outlined\"\n                        label=\"date\"\n                      />\n                      <ErrorMessage name=\"date\" render={returnErrorMsg} />\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        marginTop: \"20px\",\n                      }}\n                    >\n                      <div style={{ width: \"45%\" }}>\n                        <DateInput\n                          name={\"from\"}\n                          style={{ width: \"100%\" }}\n                          classnames={\"date-input date-input-wide\"}\n                          required={true}\n                          inputVariant=\"outlined\"\n                          label=\"start date\"\n                        />\n                        <ErrorMessage name=\"from\" render={returnErrorMsg} />\n                      </div>\n                      <span style={{ margin: \"15px 5%\" }}>to</span>\n                      <div style={{ width: \"45%\" }}>\n                        <DateInput\n                          style={{ width: \"100%\" }}\n                          name={\"to\"}\n                          classnames={\"date-input date-input-wide\"}\n                          required={true}\n                          inputVariant=\"outlined\"\n                          label=\"end date\"\n                        />\n                        <ErrorMessage name=\"to\" render={returnErrorMsg} />\n                      </div>\n                    </div>\n                  )}\n\n                  <TextInput\n                    id={\"test2\"}\n                    name={\"description\"}\n                    style={{ marginTop: \"20px\" }}\n                    placeholder={\"\"}\n                    classnames={\"text-input text-input-wide\"}\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    multiline={true}\n                    rows={10}\n                    rowsMax={10}\n                    label=\"description/notes (optional)\"\n                  />\n                  {deleteEntry !== undefined && (\n                    <Button\n                      style={{\n                        textTransform: \"none\",\n                        color: \"rgb(255, 118, 118)\",\n                      }}\n                      onClick={() => {\n                        deleteEntry();\n                      }}\n                      color=\"primary\"\n                    >\n                      delete entry\n                    </Button>\n                  )}\n                </div>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  style={{\n                    textTransform: \"none\",\n                    color: \"C4C4C4\",\n                  }}\n                  onClick={() => {\n                    setIsOpen(false);\n                  }}\n                >\n                  cancel\n                </Button>\n                <Button\n                  type=\"submit\"\n                  style={{\n                    textTransform: \"none\",\n                    color: \"rgb(255, 118, 118)\",\n                  }}\n                  onClick={() => {\n                    if (formRef.current) {\n                      formRef.current.handleSubmit();\n                    }\n                    if (_.isEmpty(formik.errors)) setIsOpen(false);\n                  }}\n                >\n                  update\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default DialogForm;\nexport { returnErrorMsg, entrySchema };\n","import React, { useState, createRef, useEffect, useRef } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport { Formik, Form, FieldArray, useField, ErrorMessage } from \"formik\";\nimport Accordion from \"./Accordion/accordion.js\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\nimport {\n  TextField,\n  IconButton,\n  Menu,\n  MenuItem,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DialogForm, { returnErrorMsg, entrySchema } from \"./dialogForm\";\nimport * as Yup from \"yup\";\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LOCAL_STORAGE_KEY = \"my-year-in-quarantine\";\n\nconst TextInput = ({ ...props }) => {\n  const [field] = useField(props);\n  return (\n    <>\n      <TextField className={props.classnames} {...field} {...props}></TextField>\n    </>\n  );\n};\n\nconst DateInput = ({ ...props }) => {\n  const mobile = useMediaQuery(\"(max-width:600px)\");\n  const [field, meta, helpers] = useField(props);\n  const inputProps = {\n    disableUnderline: true,\n  };\n  // field.value = field.value ? field.value : props.defaultValue;\n  return (\n    <>\n      <KeyboardDatePicker\n        clearable\n        disableToolbar\n        autoOk\n        disableFuture\n        openTo=\"year\"\n        className={props.classnames}\n        variant={mobile ? \"dialog\" : \"inline\"}\n        InputProps={inputProps}\n        placeholder=\"mm/dd/yyyy\"\n        format=\"MM/dd/yyyy\"\n        {...props}\n        {...field}\n        onChange={(date) => {\n          helpers.setValue(date);\n        }}\n        views={[\"year\", \"month\", \"date\"]}\n      />\n    </>\n  );\n};\nconst CreateTimeline = () => {\n  const history = useHistory();\n  const [questionTwo, setQuestionTwo] = useState({\n    events: [\n      { entry: \"\", date: null },\n      { entry: \"\", date: null },\n      { entry: \"\", date: null },\n    ],\n  });\n  const [questionThree, setQuestionThree] = useState({\n    phases: [\n      { entry: \"\", from: null, to: null },\n      { entry: \"\", from: null, to: null },\n      { entry: \"\", from: null, to: null },\n    ],\n  });\n\n  const [answers, setAnswers] = useState({\n    Q1: { location: \"\" },\n    Q2: {\n      events: [\n        { entry: \"\", date: null },\n        { entry: \"\", date: null },\n        { entry: \"\", date: null },\n      ],\n    },\n    Q3: {\n      phases: [\n        { entry: \"\", from: null, to: null },\n        { entry: \"\", from: null, to: null },\n        { entry: \"\", from: null, to: null },\n      ],\n    },\n    Q4: {\n      entries: [\n        { entry: \"went home went home\", date: \"2017-03-04\" },\n        { entry: \"went home\", date: \"2017-03-04\" },\n        { entry: \"went home\", date: \"2017-03-04\" },\n        { entry: \"went home\", from: \"2017-03-04\", to: \"2017-03-04\" },\n        { entry: \"went home\", from: \"2017-03-04\", to: \"2017-03-04\" },\n        { entry: \"went home\", from: \"2017-03-04\", to: \"2017-03-04\" },\n      ],\n    },\n    Q5: { title: \"\" },\n    Q6: { name: \"\" },\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [isNewEntryFormOpen, setIsNewEntryFormOpen] = useState(false);\n  const mobile = useMediaQuery(\"(max-width:600px)\");\n\n  const sortEntries = (entries) => {\n    entries.sort((entryA, entryB) => {\n      let dateA = entryA.date ? entryA.date : entryA.from;\n      let dateB = entryB.date ? entryB.date : entryB.from;\n      return dateA < dateB ? -1 : dateA > dateB ? 1 : 0;\n    });\n  };\n\n  // take answers from Q2 and Q3 and collate them into the initial values for Q4 (pass objects by reference)\n  const setQ4 = () => {\n    let events = questionTwo.events;\n    let phases = questionThree.phases;\n    let entries = [];\n    for (let event of events) {\n      if (event.entry !== \"\") entries.push(event);\n    }\n    for (let phase of phases) {\n      if (phase.entry !== \"\") entries.push(phase);\n    }\n\n    sortEntries(entries);\n\n    setAnswers({\n      ...answers,\n      Q2: questionTwo,\n      Q3: questionThree,\n      Q4: { entries: entries },\n    });\n  };\n\n  useEffect(() => {\n    setQ4();\n  }, [questionTwo, questionThree]);\n\n  useEffect(() => {\n    const storageAnswers = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageAnswers) {\n      setAnswers(storageAnswers);\n      setQuestionTwo(storageAnswers.Q2);\n      setQuestionThree(storageAnswers.Q3);\n    }\n  }, []);\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(answers));\n  }, [answers]);\n\n  const Q1 = (props) => {\n    const setLocation = (value) => {\n      setAnswers({\n        ...answers,\n        Q1: { location: value },\n      });\n    };\n    return (\n      <div className=\"questionContainer\">\n        <div className=\"locationInput\">\n          <Formik\n            initialValues={answers.Q1}\n            onSubmit={(values) => {\n              setLocation(values.location);\n            }}\n            // validationSchema={Yup.object({\n            //   label: Yup.string().required(\"required\"),\n            // })}\n          >\n            {(props) => (\n              <Form id=\"Q1\">\n                <GooglePlacesAutocomplete\n                  apiKey=\"AIzaSyCeVWbfSffGK19HP7Tg-GY_nFfZ-sP7ASw\"\n                  selectProps={{\n                    value: props.values.location,\n                    onChange: (location) => {\n                      props.setFieldValue(\"location\", location);\n                      props.setFieldValue(\"label\", location.label);\n                    },\n                    onBlur: props.handleBlur,\n                    placeholder: \"ex. New York City\",\n                  }}\n                />\n                {/* <ErrorMessage name=\"label\" render={returnErrorMsg} /> */}\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  };\n\n  const Q2 = (props) => {\n    return (\n      <div className=\"questionContainer\">\n        <h4>note</h4>\n        <div className=\"notes\">\n          <p>1. events can be in any order</p>\n          <p>2. approximate dates are fine</p>\n          <p>3. click the calendar icon to open date picker</p>\n          <p>4. click the \"+\" icon to add additional entries</p>\n        </div>\n\n        <Formik\n          initialValues={answers.Q2}\n          onSubmit={(values) => {\n            setQuestionTwo(values);\n          }}\n        >\n          {({ values }) => (\n            <Form id=\"Q2\">\n              <FieldArray\n                name=\"events\"\n                render={(arrayHelpers) => (\n                  <div>\n                    {values.events.map((event, index) => (\n                      <div className=\"inputRow\" key={index}>\n                        <TextInput\n                          id={`events.${index}.entry`}\n                          name={`events.${index}.entry`}\n                          placeholder={\n                            index === 0 ? \"ex. went home, got sick...\" : \"\"\n                          }\n                          classnames={\"text-input-wide\"}\n                        />\n                        <button\n                          className=\"deleteButton\"\n                          type=\"button\"\n                          tabIndex=\"-1\"\n                          onClick={() => {\n                            arrayHelpers.remove(index);\n                            props.update();\n                          }}\n                        >\n                          delete\n                        </button>\n                        <DateInput\n                          id={`events.${index}.date`}\n                          name={`events.${index}.date`}\n                          classnames={\"date-input\"}\n                          label={mobile ? \"date\" : null}\n                        />\n                      </div>\n                    ))}\n                    <button\n                      type=\"button\"\n                      className=\"addButton\"\n                      onClick={() => {\n                        arrayHelpers.push({ entry: \"\", date: null });\n                        props.update();\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                )}\n              />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  };\n\n  const Q3 = (props) => {\n    return (\n      <div className=\"questionContainer\">\n        <h4>note</h4>\n        <div className=\"notes\">\n          <p>1. time periods can be in any order</p>\n          <p>2. approximate dates are fine</p>\n          <p>3. click the calendar icon to open date picker</p>\n          <p>4. click the \"+\" icon to add additional entries</p>\n        </div>\n        <Formik\n          initialValues={answers.Q3}\n          onSubmit={(values) => {\n            setQuestionThree(values);\n          }}\n        >\n          {({ values }) => (\n            <Form id=\"Q3\">\n              <FieldArray\n                name=\"phases\"\n                render={(arrayHelpers) => (\n                  <div>\n                    {values.phases.map((phase, index) => (\n                      <div className=\"inputRow\" key={index}>\n                        <TextInput\n                          id={`phases.${index}.entry`}\n                          name={`phases.${index}.entry`}\n                          placeholder={\n                            index === 0\n                              ? \"ex. in quarantine, working from home...\"\n                              : \"\"\n                          }\n                          classnames={\"text-input text-input-wide\"}\n                        />\n                        <div className=\"rangeAndDeleteRow\">\n                          <button\n                            className=\"deleteButton\"\n                            type=\"button\"\n                            tabIndex=\"-1\"\n                            onClick={() => {\n                              arrayHelpers.remove(index);\n                              props.update();\n                            }}\n                          >\n                            delete\n                          </button>\n                          <div className=\"dateRange\">\n                            <DateInput\n                              id={`phases.${index}.from`}\n                              name={`phases.${index}.from`}\n                              classnames={\"date-input\"}\n                              label={mobile ? \"start date\" : null}\n                            />\n                            <span style={{ margin: \"5px\" }}>to</span>\n                            <DateInput\n                              id={`phases.${index}.to`}\n                              name={`phases.${index}.to`}\n                              lastdate={\n                                index !== 0 ? values.phases[index - 1].to : null\n                              }\n                              classnames={\"date-input\"}\n                              label={mobile ? \"end date\" : null}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                    <button\n                      type=\"button\"\n                      className=\"addButton\"\n                      onClick={() => {\n                        arrayHelpers.push({ entry: \"\", from: null, to: null });\n                        props.update();\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                )}\n              />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  };\n\n  const FormikTextFieldQuestion = ({\n    questionNumber,\n    questionName,\n    initialValues,\n    required,\n    placeholder,\n  }) => {\n    return (\n      <div className=\"questionContainer\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={\n            required\n              ? Yup.object({\n                  [questionName]: Yup.string().required(\"required\"),\n                })\n              : Yup.object({})\n          }\n          onSubmit={(values) => {\n            setAnswers({ ...answers, [questionNumber]: values });\n          }}\n        >\n          {() => (\n            <Form id={questionNumber}>\n              <TextInput\n                id={questionName}\n                name={questionName}\n                placeholder={placeholder}\n                classnames={\"text-input-wide\"}\n              />\n              <ErrorMessage name={questionName} render={returnErrorMsg} />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  };\n\n  const [selectedEntry, setSelectedEntry] = useState({});\n  const [selectedEntryIndex, setSelectedEntryIndex] = useState(0);\n\n  const formRef = createRef();\n  const newEntryFormRef = createRef();\n\n  const Q4 = (props) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    const formatDate = (dateString) => {\n      // function parseDate(input) {\n      //   var parts = input.match(/(\\d+)/g);\n      //   // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\n      //   return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based\n      // }\n      try {\n        let date = new Date(dateString);\n\n        let month = date.getMonth() + 1;\n        let day = date.getDate();\n        return `${month < 10 ? \"0\" + month : month}/${\n          day < 10 ? \"0\" + day : day\n        }/${date.getFullYear()}`;\n      } catch {\n        return \"\";\n      }\n    };\n    return (\n      <div className=\"questionContainer\">\n        <h4>note</h4>\n        <div className=\"notes\">\n          <p>1. click the pencil icon to add notes or edit/delete entries</p>\n          <p>2. use the notes section to provide additional details</p>\n          <p>3. click the calendar icon to open date picker</p>\n          <p>4. click the \"+\" icon to add additional entries</p>\n        </div>\n        {answers.Q4.entries.map((entry, index) => (\n          <div className=\"inputRow\" key={index}>\n            <div className=\"entry-container\">\n              <div style={{ gridColumnStart: \"1\", gridColumnEnd: \"2\" }}>\n                <p>{entry.entry}</p>\n              </div>\n              <div\n                style={{\n                  gridColumnStart: \"2\",\n                  gridColumnEnd: \"3\",\n                  textAlign: \"center\",\n                }}\n              >\n                {/* if date is undefined or empty */}\n                {entry.date !== undefined ? (\n                  <p>{formatDate(entry.date)}</p>\n                ) : (\n                  <p>{`${\n                    formatDate(entry.from) + \"-\" + formatDate(entry.to)\n                  }`}</p>\n                )}\n              </div>\n              <div style={{ gridColumnStart: \"3\", gridColumnEnd: \"4\" }}>\n                <IconButton\n                  style={{\n                    float: \"right\",\n                    position: \"relative\",\n                    top: \"-10px\",\n                  }}\n                  onClick={() => {\n                    setIsOpen(true);\n                    setSelectedEntry(entry);\n                    setSelectedEntryIndex(index);\n                  }}\n                >\n                  <EditIcon fontSize=\"small\" />\n                </IconButton>\n              </div>\n            </div>\n          </div>\n        ))}\n\n        <DialogForm\n          initialValues={selectedEntry}\n          onSubmit={(values) => {\n            //update Q2 or Q3, which will automatically update Q4\n\n            if (values.date !== undefined) {\n              // update Q2\n              // make copy of q2, replace updated entry, set q2 to copy of q2\n              let newEvents = [...questionTwo.events];\n              let eventIndex = questionTwo.events.indexOf(selectedEntry);\n              newEvents.splice(eventIndex, 1, values);\n              setQuestionTwo({ events: newEvents });\n            } else {\n              // update Q3\n              // make copy of q2, replace updated entry, set q2 to copy of q2\n              let newPhases = [...questionThree.phases];\n              let phaseIndex = questionThree.phases.indexOf(selectedEntry);\n              newPhases.splice(phaseIndex, 1, values);\n              setQuestionThree({ phases: newPhases });\n            }\n          }}\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n          formRef={formRef}\n          deleteEntry={() => {\n            // delete from Q2/Q3, which will automatically delete from Q4\n            if (selectedEntry.date !== undefined) {\n              // delete from Q2\n              // make copy of q2, replace updated entry, set q2 to copy of q2\n              let newEvents = [...questionTwo.events];\n              let eventIndex = questionTwo.events.indexOf(selectedEntry);\n              newEvents.splice(eventIndex, 1);\n              setQuestionTwo({ events: newEvents });\n            } else {\n              // delete from Q3\n              // make copy of q2, replace updated entry, set q2 to copy of q2\n              let newPhases = [...questionThree.phases];\n              let phaseIndex = questionThree.phases.indexOf(selectedEntry);\n              newPhases.splice(phaseIndex, 1);\n              setQuestionThree({ phases: newPhases });\n            }\n            setIsOpen(false);\n          }}\n        />\n\n        <button\n          type=\"button\"\n          className=\"addButton\"\n          onClick={(e) => {\n            handleClick(e);\n          }}\n        >\n          +\n        </button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              handleClose();\n              setSelectedEntry({ entry: \"\", date: null });\n              setIsNewEntryFormOpen(true);\n            }}\n          >\n            add event\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              handleClose();\n              setSelectedEntry({ entry: \"\", from: null, to: null });\n              setIsNewEntryFormOpen(true);\n            }}\n          >\n            add time period\n          </MenuItem>\n        </Menu>\n        {/* new entry form */}\n        <DialogForm\n          initialValues={selectedEntry}\n          onSubmit={(values) => {\n            if (selectedEntry.date !== undefined) {\n              // add to Q2\n              // make copy of q2, replace updated entry, set q2 to copy of q2\n              let newEvents = [...questionTwo.events];\n              newEvents.unshift(values);\n              setQuestionTwo({ events: newEvents });\n            } else {\n              // add to Q3\n              // make copy of q2, replace updated entry, set q2 to copy of q2\n              let newPhases = [...questionThree.phases];\n              newPhases.unshift(values);\n              setQuestionThree({ phases: newPhases });\n            }\n            props.update();\n          }}\n          isOpen={isNewEntryFormOpen}\n          setIsOpen={setIsNewEntryFormOpen}\n          formRef={newEntryFormRef}\n        />\n      </div>\n    );\n  };\n  const Q5 = () => {\n    return (\n      <FormikTextFieldQuestion\n        questionNumber={\"Q5\"}\n        questionName={\"title\"}\n        initialValues={answers.Q5}\n        placeholder={\"ex. My Year in Quarantine\"}\n      />\n    );\n  };\n  const Q6 = () => {\n    return (\n      <FormikTextFieldQuestion\n        questionNumber={\"Q6\"}\n        questionName={\"name\"}\n        initialValues={answers.Q6}\n        required={true}\n        placeholder={\"\"}\n      />\n    );\n  };\n\n  const panels = [\n    {\n      label: \"1. Where were you located when the COVID-19 pandemic began? \",\n      id: \"Q1\",\n      component: <Q1 />,\n    },\n    {\n      label:\n        \"2. List the most significant things that have happened in your life since then, along with their approximate dates\",\n      id: \"Q2\",\n      component: <Q2 />,\n    },\n    {\n      label:\n        \"3. List any time periods or phases you went through during this time that you consider significant, along with their approximate start/end dates\",\n      id: \"Q3\",\n      component: <Q3 />,\n    },\n    {\n      label: \"4. Elaborate on your experiences \",\n      id: \"Q4\",\n      component: <Q4 />,\n    },\n    {\n      label: \"5. Give your timeline a title (optional)\",\n      id: \"Q5\",\n      component: <Q5 />,\n    },\n    {\n      label: \"6. Your preferred name \",\n      id: \"Q6\",\n      component: <Q6 />,\n    },\n  ];\n\n  const schema = Yup.object().shape({\n    Q1: Yup.object().shape({\n      location: Yup.object()\n        .typeError(\"q1: location is required\")\n        .shape({\n          label: Yup.string().ensure().required(\"q1: location is required\"),\n        }),\n    }),\n    Q4: Yup.object().shape({\n      entries: Yup.array()\n        .of(entrySchema)\n        .min(3, \"q4: please include at least 3 timeline entries\"),\n    }),\n    Q6: Yup.object().shape({\n      name: Yup.string().required(\"q6: name is required\"),\n    }),\n  });\n\n  return (\n    <div className=\"createForm\">\n      <MetaTags>\n        <title>Create Timeline - My Year in Quarantine </title>\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\n      </MetaTags>\n\n      {/* <nav>\n        <h1>my year in quarantine</h1>\n        <hr />\n      </nav> */}\n\n      <div className=\"timelineForm\">\n        <h2\n          style={{\n            textAlign: \"center\",\n            margin: \"50px\",\n            fontSize: \"2em\",\n          }}\n        >\n          let's get started!\n        </h2>\n\n        {/* <div className=\"notes\">\n          <h4>note</h4>\n          <p>1. this section usually takes about 5-10 minutes to complete</p>\n          <p>2. feel free to take breaks. your work will be saved</p>\n          <p>\n            3. your answers will be used to generate your personal timeline. You will be able to preview your timeline before publishing\n          </p>\n        </div> */}\n        <Accordion panels={panels} />\n        <div style={{ margin: \"20px\", height: \"100px\" }}>\n          <button\n            className=\"finish\"\n            onClick={() => {\n              schema\n                .validate(answers, { abortEarly: false })\n                .then((valid) => {\n                  setErrors([]);\n                  console.log(answers);\n                  history.push(\"/preview\");\n                })\n                .catch((err) => {\n                  setErrors(err.errors);\n                });\n            }}\n          >\n            <span style={{ cursor: \"pointer\", outline: \"none\" }}>Finish</span>\n          </button>\n          <div className=\"errorContainer\">\n            {errors.map((error, index) => (\n              <div\n                key={index}\n                style={{\n                  color: \"red\",\n                  fontSize: \"0.8em\",\n                  marginLeft: \"5px\",\n                }}\n              >\n                {error}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateTimeline;\nexport { TextInput, DateInput };\n","import React from \"react\";\n\n// basically just a div with a circle next to it\nconst EntryContainer = (props) => {\n  return (\n    <div className=\"entry-container\">\n      {props.children}\n      <span className=\"circle\" />\n    </div>\n  );\n};\n\nexport default EntryContainer;\n","import React from \"react\";\nimport EntryContainer from \"./entryContainer\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\n\nconst TimelineTitle = ({ title, name, id }) => {\n  return (\n    <EntryContainer>\n      {\n        <div className=\"entry-content\" id={id}>\n          <ScrollAnimation\n            animateIn=\"animate__fadeInRight\"\n            duration={0.9}\n            animateOnce={true}\n            offset={150}\n            delay={1300}\n          >\n            <h1 style={{ wordSpacing: \"99999px\" }}>{title}</h1>\n            <br />\n            <br />\n            <ScrollAnimation\n              animateIn=\"animate__fadeInUp\"\n              duration={0.4}\n              animateOnce={true}\n              offset={150}\n              delay={2300}\n            >\n              <div style={{ height: \"100px\" }}>\n                <p style={{ float: \"right\" }}>{`by ${name}`}</p>\n              </div>\n            </ScrollAnimation>\n            <br />\n            <br />\n            <br />\n            <br />\n            {/* <p style={{ textAlign: \"center\" }}> click or tap to begin</p> */}\n          </ScrollAnimation>\n        </div>\n      }\n    </EntryContainer>\n  );\n};\n\nexport default TimelineTitle;\n","import React from \"react\";\nimport EntryContainer from \"./entryContainer\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\n\nconst Entry = ({ date, title, content, id }) => {\n  return (\n    <EntryContainer>\n      {\n        <div className=\"entry-content\" id={id}>\n          <ScrollAnimation\n            animateIn=\"animate__fadeIn\"\n            duration={1.0}\n            animateOnce={true}\n            offset={-200}\n            delay={900}\n          >\n            <h3>{date}</h3>\n            <h2 style={{ marginTop: \"6px\" }}>{title}</h2>\n            <ScrollAnimation\n              animateIn=\"animate__fadeInRight\"\n              duration={0.5}\n              animateOnce={true}\n              offset={-200}\n              delay={1600}\n            >\n              <div style={{ marginTop: \"15px\" }}>{content}</div>\n            </ScrollAnimation>\n          </ScrollAnimation>\n        </div>\n      }\n    </EntryContainer>\n  );\n};\n\nexport default Entry;\n","import React from \"react\";\n\nconst Divider = ({ height }) => {\n  return <div style={{ height: height }}></div>;\n};\n\nexport default Divider;\n","import React, { useState, useEffect } from \"react\";\nimport TimelineTitle from \"./timelineTitle\";\nimport Entry from \"./entry\";\nimport Divider from \"./divider\";\nimport { format } from \"date-fns\";\nimport { animateScroll as scroll, scrollSpy, scroller } from \"react-scroll\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { useDoubleTap } from \"use-double-tap\";\n\nconst Timeline = ({ answers }) => {\n  const [scrollTarget, setScrollTarget] = useState(0);\n\n  useEffect(() => {\n    var supportsPassive = false;\n    try {\n      window.addEventListener(\n        \"test\",\n        null,\n        Object.defineProperty({}, \"passive\", {\n          get: function () {\n            supportsPassive = true;\n          },\n        })\n      );\n    } catch (e) {}\n\n    var wheelOpt = supportsPassive ? { passive: false } : false;\n    document.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"wheel\", handleScroll, wheelOpt);\n    window.addEventListener(\n      \"touchmove\",\n      (e) => {\n        e.preventDefault();\n      },\n      wheelOpt\n    );\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"wheel\", handleScroll, wheelOpt);\n      window.removeEventListener(\n        \"touchmove\",\n        (e) => {\n          e.preventDefault();\n        },\n        wheelOpt\n      );\n    };\n  });\n\n  const formatDate = (date) => {\n    return format(new Date(date), \"MMM dd yyyy\");\n  };\n\n  const dividerHeight = \"600px\";\n\n  const scrollToTarget = (targetID) => {\n    scroller.scrollTo(String(targetID), {\n      duration: 1300,\n      delay: 0,\n      smooth: true,\n      offset: -70,\n    });\n    setScrollTarget(targetID);\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.key) {\n      case \"ArrowUp\":\n        e.preventDefault();\n        if (scrollTarget >= 1) {\n          scrollToTarget(scrollTarget - 1);\n        }\n        break;\n      case \"ArrowDown\":\n        e.preventDefault();\n        // 1 less than the total number of timeline entries\n        if (scrollTarget < answers.entries.length + 2 - 1) {\n          scrollToTarget(scrollTarget + 1);\n        }\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleScroll = (e) => {\n    e.preventDefault();\n    // add isScrolling stuff\n\n    if (e.wheelDelta > 0) {\n      if (scrollTarget >= 1) {\n        scrollToTarget(scrollTarget - 1);\n      }\n    } else if (e.wheelDelta < 0) {\n      // 1 less than the total number of timeline entries\n      if (scrollTarget < answers.entries.length + 2 - 1) {\n        scrollToTarget(scrollTarget + 1);\n      }\n    }\n  };\n  const handlers = useSwipeable({\n    onSwipedUp: (eventData) => scrollToTarget(scrollTarget + 1),\n    onSwipedDown: (eventData) => scrollToTarget(scrollTarget - 1),\n    delta: 10, // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false, // call e.preventDefault *See Details*\n    trackTouch: true, // track touch input\n    trackMouse: false, // track mouse input\n    rotationAngle: 0, // set a rotation angle\n  });\n\n  const bind = useDoubleTap((e) => {\n    if (e.clientY < window.innerWidth * 0.4) scrollToTarget(scrollTarget - 1);\n    else if (e.clientY > window.innerWidth * 0.6)\n      scrollToTarget(scrollTarget + 1);\n  });\n\n  return (\n    <div className=\"timeline-container\" {...handlers} {...bind} id={\"0\"}>\n      {/* title block*/}\n      <div className=\"timeline-content\">\n        <TimelineTitle title={answers.title} name={answers.name} />\n        <Divider height={dividerHeight} />\n\n        {/* introduction block */}\n        <Entry\n          date={\"2020\"}\n          title={\"The COVID-19 pandemic begins\"}\n          content={\n            <div>\n              <p>{`${answers.name} is located in`}</p>\n              <p>{`📍 ${answers.location} `}</p>\n            </div>\n          }\n          id={\"1\"}\n        />\n        <Divider height={dividerHeight} />\n\n        {answers.entries &&\n          answers.entries.map((entry, index) => {\n            return (\n              <div key={index}>\n                <Entry\n                  date={\n                    entry.date\n                      ? formatDate(entry.date)\n                      : `${formatDate(entry.from)} -  \\n ${formatDate(\n                          entry.to\n                        )}`\n                  }\n                  title={entry.entry}\n                  content={\n                    <div>\n                      <p>{entry.description ? entry.description : \"\"}</p>\n                    </div>\n                  }\n                  id={String(index + 2)}\n                />\n\n                <Divider height={dividerHeight} />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Timeline;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  InputAdornment,\n  FormControl,\n  OutlinedInput,\n  Tooltip,\n  Menu,\n  MenuItem,\n} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport _ from \"lodash\";\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n} from \"react-share\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {\n  FacebookIcon,\n  LinkedinIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\nconst ShareDialog = ({ isOpen, setIsOpen, shareURL }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleClose = () => {\n    // for closing save menu\n    setAnchorEl(null);\n  };\n  const openSaveMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  return (\n    <Dialog\n      onClose={() => {\n        setIsOpen(false);\n      }}\n      open={isOpen}\n      maxWidth={\"sm\"}\n      fullWidth={true}\n    >\n      <div>\n        <DialogContent className=\"dialog-content\">\n          <div className=\"dialog-content\">\n            <div\n              style={{\n                fontSize: \"1.2em\",\n                margin: \"5px\",\n              }}\n            >\n              Export and share\n              <IconButton\n                aria-label=\"close\"\n                onClick={() => {\n                  setIsOpen(false);\n                }}\n                style={{ float: \"right\", padding: \"0px\" }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n            {/* share button row */}\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                height: \"50px\",\n                margin: \"40px 0px\",\n              }}\n            >\n              <FacebookShareButton url={shareURL}>\n                <FacebookIcon size={50} round />\n              </FacebookShareButton>\n              <IconButton\n                aria-label=\"copy link to clipboard\"\n                onClick={openSaveMenu}\n                size=\"large\"\n              >\n                <Tooltip title=\"download\">\n                  <GetAppIcon fontSize=\"large\" />\n                </Tooltip>\n              </IconButton>\n              <TwitterShareButton url={shareURL}>\n                <TwitterIcon size={50} round />\n              </TwitterShareButton>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem\n                  onClick={() => {\n                    handleClose();\n                  }}\n                >\n                  Save as single image\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    handleClose();\n                  }}\n                >\n                  <p>\n                    <pre>{\"Save as multiple images\"}</pre>\n                  </p>\n                </MenuItem>\n              </Menu>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                height: \"50px\",\n                margin: \"40px 0px\",\n              }}\n            >\n              <LinkedinShareButton url={shareURL}>\n                <LinkedinIcon size={50} round />\n              </LinkedinShareButton>\n              <WhatsappShareButton url={shareURL}>\n                <WhatsappIcon size={50} round />\n              </WhatsappShareButton>\n            </div>\n            <div\n              style={{\n                height: \"90px\",\n                margin: \"auto\",\n                marginTop: \"50px\",\n                width: \"90%\",\n              }}\n            >\n              <FormControl\n                variant=\"outlined\"\n                style={{ margin: \"0px auto\", width: \"100%\" }}\n              >\n                <OutlinedInput\n                  style={{ height: \"40px\", borderRadius: \"0px\" }}\n                  defaultValue={shareURL}\n                  readOnly\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"copy link to clipboard\"\n                        onClick={() => {}}\n                        edge=\"end\"\n                      >\n                        <Tooltip title=\"copy to clipboard\">\n                          <FileCopyIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n              {/* <TextField\n                style={{ margin: \"10px auto\", width: \"100%\" }}\n                InputProps={{\n                  readOnly: true,\n                  style: { height: \"40px\", borderRadius: \"0px\" },\n                }}\n                defaultValue={shareURL}\n                variant=\"outlined\"\n                color=\"none\"\n              >\n              </TextField> */}\n            </div>\n          </div>\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n};\nexport default ShareDialog;\n","import React, { useState, useEffect } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport Timeline from \"./timeline/timeline\";\nimport * as defaultAnswers from \"../answers.json\";\nimport _ from \"lodash\";\nimport ScrollAnimation from \"react-animate-on-scroll\";\nimport \"animate.css/animate.min.css\";\nimport { NavLink } from \"react-router-dom\";\nimport ShareDialog from \"./shareDialog\";\n\nconst PreviewPage = () => {\n  const [answers, setAnswers] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const LOCAL_STORAGE_KEY = \"my-year-in-quarantine\";\n\n  useEffect(() => {\n    setTimeout(() => window.scrollTo(0, 0), 150); // ugly solution, but kinda works\n\n    let localStorageAnswers = JSON.parse(\n      localStorage.getItem(LOCAL_STORAGE_KEY)\n    );\n    if (localStorageAnswers) setAnswers(organizeAnswers(localStorageAnswers));\n    // setAnswers(organizeAnswers(defaultAnswers.default));\n    // localStorage.setItem(\n    //   LOCAL_STORAGE_KEY,\n    //   JSON.stringify(defaultAnswers.default)\n    // );\n  }, []);\n\n  const organizeAnswers = (answers) => {\n    let toReturn = {};\n    if (!_.isEmpty(answers)) {\n      toReturn.location = answers.Q1.location.label;\n      toReturn.entries = answers.Q4.entries;\n      toReturn.name = answers.Q6.name;\n      toReturn.title = answers.Q5.title\n        ? answers.Q5.title\n        : `${toReturn.name}'s year in quarantine`;\n    }\n\n    return toReturn;\n  };\n\n  return (\n    <div className=\"preview-page\">\n      <MetaTags>\n        <title>Preview Timeline - My Year in Quarantine </title>\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no\" />\n      </MetaTags>\n\n      <div className=\"timeline-container-outer\">\n        {/* <Timeline answers={answers} /> */}\n        <ScrollAnimation\n          animateIn=\"animate__fadeInUpBig\"\n          duration={1.2}\n          animateOnce={true}\n          offset={150}\n          delay={10}\n        >\n          <Timeline answers={answers} />\n        </ScrollAnimation>\n      </div>\n      <div\n        className=\"button-container\"\n        style={{ position: \"relative\", top: \"-200px\" }}\n      >\n        <div\n          style={{\n            float: \"right\",\n            marginRight: \"5%\",\n            position: \"relative\",\n            textAlign: \"center\",\n            zIndex: \"100\",\n          }}\n        >\n          <p>end of preview</p>\n          <br />\n          <br />\n          <br />\n\n          <NavLink className=\"learnMore\" to={\"/create\"}>\n            continue editing\n          </NavLink>\n          <button\n            className=\"primaryButton\"\n            onClick={() => setIsOpen(true)}\n            to={\"/create\"}\n          >\n            export and share\n          </button>\n        </div>\n      </div>\n      <ShareDialog\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        shareURL={\"https://myyearinquarantine.com\"}\n      />\n    </div>\n  );\n};\n\nexport default PreviewPage;\n","import \"./styles/app.css\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\";\nimport CreateTimeline from \"./components/CreateTimeline\";\nimport PreviewPage from \"./components/previewPage\";\nimport MetaTags from \"react-meta-tags\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nfunction App() {\n  const THEME = createMuiTheme({\n    typography: {\n      fontFamily: `\"Montserrat\", sans-serif;`,\n      fontSize: 14,\n      fontWeightLight: 300,\n      fontWeightRegular: 400,\n      fontWeightMedium: 500,\n    },\n  });\n\n  return (\n    <div className=\"App\">\n      <MetaTags>\n        <meta\n          name=\"description\"\n          content=\"How’s your year in quarantine been? Share your story with a beautiful, interactive timeline that only takes minutes to create.\"\n        />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n        />\n      </MetaTags>\n      <ThemeProvider theme={THEME}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Switch>\n            <Route path={\"/\"} exact component={LandingPage} />\n            <Route path={\"/create\"} exact component={CreateTimeline} />\n            <Route path={\"/preview\"} exact component={PreviewPage} />\n            <Redirect to={\"/\"} />\n          </Switch>\n        </MuiPickersUtilsProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}